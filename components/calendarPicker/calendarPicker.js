"use strict"; function _interopRequireDefault(t) { return t && t.__esModule ? t : { default: t } } var _monthCalculator = require("./month-calculator"), _monthCalculator2 = _interopRequireDefault(_monthCalculator); Component({ properties: { current: { type: Number, value: 0 }, todayDate: { type: Date, value: 0 }, listDate: { type: Array, value: [] }, currentDate: { type: String, value: "" }, startDate: { type: String, value: "", observer: function (t, e) { this._getTotalMonth() } }, endDate: { type: String, value: "", observer: function (t, e) { this._getTotalMonth() } } }, ready: function () { var t = this; setTimeout(function () { t._getTotalMonth() }, 1000),this._setSwiperHeight() }, methods: { change: function (t) { var e = t.detail.current; this.setData({ current: e }), this._setSwiperHeight(); this.setTitle() }, changeToToday: function (t) { var e = this.data, a = (e.current, e.currentDate, e.todayMonthIndex), n = e.todayDate; this.setData({ current: a, currentDate: n }), this.triggerEvent("change", { currentDate: n }) }, tapDate: function (t) { var e = this.data, a = (e.current, e.currentDate, e.todayMonthIndex, e.todayDate, t.target.dataset); a.disabled || (this.setData({ currentDate: a.datestr }), this.triggerEvent("change", { currentDate: a.datestr })) }, _getTotalMonth: function () { var t = this.properties, e = t.startDate, a = t.endDate, n = new _monthCalculator2.default({ startDate: e, endDate: a }), r = n.getTotal(), o = n.getToday(), i = {}; this.setData({ todayDate: o.date }); o && ( i.todayMonthIndex = o.monthIndex, i.todayDate = o.date), i.months = r, this.setData(i); this.setTitle() }, setTitle: function () { let t = this; let a = this.data.months[this.data.current].title + '月', b = a.replace(/-/g, '年'); t.setData({ title: b }) }, _setSwiperHeight: function () { var t = this; wx.createSelectorQuery().in(this).selectAll(".calendar-picker-month").boundingClientRect(function (e) { var a = t.data.current, n = e[a];if(n&&n.height){var r=n.height+"px";t.setData({swiperHeight:r})}}).exec()}}});